{
  // if you ever want to install a linter on a project that doesn't have it
  // just run:
  // npm install eslint --save-dev
  // npx eslint --init
  // and follow the terminal prompts for decent dafaults.
  // https://eslint.org/docs/user-guide/getting-started
  "env": {
    "browser": true,
    "commonjs": true,
    "es6": true,
    "mocha": true,
    "jquery": true
  },
  // This is for global vars that get picked up by the linter
  // Just letting it know this is a thing
  // look, at webpack conifig
  "globals": {
    "__dirname": true
  },
  "extends": "eslint:recommended",
  "parserOptions": { "sourceType": "module" },
  "rules": {
    "eqeqeq": ["error", "always"],
    "brace-style": "error",
    "comma-spacing": ["warn", { "before": false, "after": true }],
    "curly": "error",
    "semi-spacing": ["error", { "before": false, "after": true }],
    "indent": ["warn", 2],
    "key-spacing": ["error", { "beforeColon": false, "afterColon": true }],
    "keyword-spacing": ["error", { "before": true, "after": true }],
    "linebreak-style": ["error", "unix"],
    // You should try to appease this line length rule where possible
    //  Most linters have it and it helps squeeze 2 windows next to each other without
    // having to scroll over.  Having a linter in you're IDE makes it easier to abide
    //  Tell you project partners about:
    // linter-eslint
    // and how to install
    "max-len": ["warn", 80],
    "new-cap": ["error", { "newIsCap": true }],
    "object-shorthand": ["error", "always"],
    "space-before-blocks": ["error", { "functions": "always", "keywords": "always", "classes": "always" }],
    "space-infix-ops": ["error", { "int32Hint": false }]
  }
}